/*
 * Proyecto Calculadora
 * Hecho por Sebastian Catano, Tom Cruz, Carlos Fuentes y Alexander Roman  * 
 */
package proyectocalculadora;

import java.awt.event.KeyEvent;
import proyectocalculadora.RPN.*;

/**
 *
 * @author
 */
public class InterfaceCalculadora extends javax.swing.JFrame {
    
    public double memoria = 0.0;
    
    /**
     * Creates new form InterfaceCalculadora
     */
    public InterfaceCalculadora() {
        initComponents();
        setTitle("Calculadora");
        setLocation(500,250);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panDatos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCalculadora = new javax.swing.JTextArea();
        btt1 = new javax.swing.JButton();
        btt2 = new javax.swing.JButton();
        btt3 = new javax.swing.JButton();
        btt4 = new javax.swing.JButton();
        btt5 = new javax.swing.JButton();
        btt6 = new javax.swing.JButton();
        btt7 = new javax.swing.JButton();
        btt8 = new javax.swing.JButton();
        btt9 = new javax.swing.JButton();
        btt0 = new javax.swing.JButton();
        bttDecimal = new javax.swing.JButton();
        bttPositivoNegativo = new javax.swing.JButton();
        bttLimpiar = new javax.swing.JButton();
        bttSuma = new javax.swing.JButton();
        bttResta = new javax.swing.JButton();
        bttMultiplicacion = new javax.swing.JButton();
        bttDivision = new javax.swing.JButton();
        bttPotencia = new javax.swing.JButton();
        bttParentesisInicio = new javax.swing.JButton();
        bttParentesisFinal = new javax.swing.JButton();
        bttIgual = new javax.swing.JButton();
        bttLimpiarTodo = new javax.swing.JButton();
        bttBorrar = new javax.swing.JButton();
        bttRespuesta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        panDatos.setBorder(javax.swing.BorderFactory.createTitledBorder("Calculadora"));

        txtCalculadora.setEditable(false);
        txtCalculadora.setColumns(20);
        txtCalculadora.setRows(5);
        txtCalculadora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCalculadoraKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtCalculadora);

        javax.swing.GroupLayout panDatosLayout = new javax.swing.GroupLayout(panDatos);
        panDatos.setLayout(panDatosLayout);
        panDatosLayout.setHorizontalGroup(
            panDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panDatosLayout.setVerticalGroup(
            panDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDatosLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addContainerGap())
        );

        btt1.setText("1");
        btt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt1ActionPerformed(evt);
            }
        });

        btt2.setText("2");
        btt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt2ActionPerformed(evt);
            }
        });

        btt3.setText("3");
        btt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt3ActionPerformed(evt);
            }
        });

        btt4.setText("4");
        btt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt4ActionPerformed(evt);
            }
        });

        btt5.setText("5");
        btt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt5ActionPerformed(evt);
            }
        });

        btt6.setText("6");
        btt6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt6ActionPerformed(evt);
            }
        });

        btt7.setText("7");
        btt7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt7ActionPerformed(evt);
            }
        });

        btt8.setText("8");
        btt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt8ActionPerformed(evt);
            }
        });

        btt9.setText("9");
        btt9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt9ActionPerformed(evt);
            }
        });

        btt0.setText("0");
        btt0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt0ActionPerformed(evt);
            }
        });

        bttDecimal.setText(".");
        bttDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttDecimalActionPerformed(evt);
            }
        });

        bttPositivoNegativo.setText("+/-");
        bttPositivoNegativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttPositivoNegativoActionPerformed(evt);
            }
        });

        bttLimpiar.setText("C");
        bttLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttLimpiarActionPerformed(evt);
            }
        });

        bttSuma.setText("+");
        bttSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttSumaActionPerformed(evt);
            }
        });

        bttResta.setText("-");
        bttResta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttRestaActionPerformed(evt);
            }
        });

        bttMultiplicacion.setText("*");
        bttMultiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttMultiplicacionActionPerformed(evt);
            }
        });

        bttDivision.setText("/");
        bttDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttDivisionActionPerformed(evt);
            }
        });

        bttPotencia.setText("^");
        bttPotencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttPotenciaActionPerformed(evt);
            }
        });

        bttParentesisInicio.setText("(");
        bttParentesisInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttParentesisInicioActionPerformed(evt);
            }
        });

        bttParentesisFinal.setText(")");
        bttParentesisFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttParentesisFinalActionPerformed(evt);
            }
        });

        bttIgual.setText("=");
        bttIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttIgualActionPerformed(evt);
            }
        });

        bttLimpiarTodo.setText("AC");
        bttLimpiarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttLimpiarTodoActionPerformed(evt);
            }
        });

        bttBorrar.setText("DEL");
        bttBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBorrarActionPerformed(evt);
            }
        });

        bttRespuesta.setText("ANS");
        bttRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttRespuestaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btt7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btt8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btt9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bttBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bttMultiplicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bttParentesisFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btt4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btt5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btt6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bttLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bttResta, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bttParentesisInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btt0, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bttDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bttPositivoNegativo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bttRespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bttDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bttIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btt1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btt2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btt3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bttLimpiarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bttSuma, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bttPotencia, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(panDatos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btt1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btt2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btt3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bttSuma, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bttLimpiarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bttPotencia, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btt4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btt5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btt6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bttResta, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bttLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bttParentesisInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btt7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btt8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btt9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttMultiplicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttParentesisFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btt0, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttPositivoNegativo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttRespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttLimpiarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttLimpiarTodoActionPerformed
        txtCalculadora.setText("");
        memoria = 0.0;
    }//GEN-LAST:event_bttLimpiarTodoActionPerformed

    private void btt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt1ActionPerformed
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            txtCalculadora.setText(txtCalculadora.getText()+"1");
        }else{
            String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "1");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo)){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "1");
                    }
                }else{
                    txtCalculadora.setText(inicio + cadena + "1");
                }
            }
        }
    }//GEN-LAST:event_btt1ActionPerformed

    private void btt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt2ActionPerformed
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            txtCalculadora.setText(txtCalculadora.getText()+"2");
        }else{
            String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "2");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo)){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "2");
                    }
                }else{
                    txtCalculadora.setText(inicio + cadena + "2");
                }
            }
        }
    }//GEN-LAST:event_btt2ActionPerformed

    private void btt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt3ActionPerformed
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            txtCalculadora.setText(txtCalculadora.getText()+"3");
        }else{
            String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "3");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo)){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "3");
                    }
                }else{
                    txtCalculadora.setText(inicio + cadena + "3");
                }
            }
        }
    }//GEN-LAST:event_btt3ActionPerformed

    private void btt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt4ActionPerformed
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            txtCalculadora.setText(txtCalculadora.getText()+"4");
        }else{
            String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "4");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo)){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "4");
                    }
                }else{
                    txtCalculadora.setText(inicio + cadena + "4");
                }
            }
        }
    }//GEN-LAST:event_btt4ActionPerformed

    private void btt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt5ActionPerformed
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            txtCalculadora.setText(txtCalculadora.getText()+"5");
        }else{
            String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "5");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo)){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "5");
                    }
                }else{
                    txtCalculadora.setText(inicio + cadena + "5");
                }
            }
        }
    }//GEN-LAST:event_btt5ActionPerformed

    private void btt6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt6ActionPerformed
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            txtCalculadora.setText(txtCalculadora.getText()+"6");
        }else{
            String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "6");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo)){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "6");
                    }
                }else{
                    txtCalculadora.setText(inicio + cadena + "6");
                }
            }
        }
    }//GEN-LAST:event_btt6ActionPerformed

    private void btt7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt7ActionPerformed
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            txtCalculadora.setText(txtCalculadora.getText()+"7");
        }else{
            String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "7");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo)){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "7");
                    }
                }else{
                    txtCalculadora.setText(inicio + cadena + "7");
                }
            }
        }
    }//GEN-LAST:event_btt7ActionPerformed

    private void btt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt8ActionPerformed
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            txtCalculadora.setText(txtCalculadora.getText()+"8");
        }else{
            String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "8");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo)){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "8");
                    }
                }else{
                    txtCalculadora.setText(inicio + cadena + "8");
                }
            }
        }
    }//GEN-LAST:event_btt8ActionPerformed

    private void btt9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt9ActionPerformed
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            txtCalculadora.setText(txtCalculadora.getText()+"9");
        }else{
            String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "9");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo)){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "9");
                    }
                }else{
                    txtCalculadora.setText(inicio + cadena + "9");
                }
            }
        }
    }//GEN-LAST:event_btt9ActionPerformed

    private void btt0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt0ActionPerformed
        String cadena, ultimo, penultimo;
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText();
            if(cadena.length() <= 0){
                txtCalculadora.setText("0");
            }else{
                ultimo = cadena.substring(cadena.length()-1);
                if(cadena.length() == 1){
                    if(!"0".equals(ultimo)){
                        txtCalculadora.setText(cadena + "0");
                    }
                }
                else{
                    if(" ".equals(ultimo)){
                        txtCalculadora.setText(cadena + "0");
                    }else if("0".equals(ultimo)){
                        penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if(!"+".equals(penultimo) || !"-".equals(penultimo) || !" ".equals(penultimo)){
                            txtCalculadora.setText(cadena + "0");
                        }
                    }else{
                        txtCalculadora.setText(cadena + "0");
                    }
                }
            }
        }else{
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "0");
            }else{
                ultimo = cadena.substring(cadena.length()-1);
                if(cadena.length() == 1){
                    if(!"0".equals(ultimo)){
                        txtCalculadora.setText(inicio + cadena + "0");
                    }
                }
                else{
                    penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if(" ".equals(ultimo) && ("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo))){
                        txtCalculadora.setText(inicio + cadena + "0");
                    }else if("0".equals(ultimo)){
                        if(!"+".equals(penultimo) || !"-".equals(penultimo) || !" ".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "0");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "0");
                    }
                }
            }
        }
    }//GEN-LAST:event_btt0ActionPerformed
    
    private void bttDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttDecimalActionPerformed
        String cadena = txtCalculadora.getText();
        if(cadena.length() <= 0){
            txtCalculadora.setText("0.");
        }else{
            String ultimo = cadena.substring(cadena.length()-1);
            if(!hayPunto(txtCalculadora.getText()) && (" ".equals(ultimo) || "+".equals(ultimo) || "-".equals(ultimo) || "\n".equals(ultimo))){
                txtCalculadora.setText(cadena+"0.");
            }else if(!hayPunto(txtCalculadora.getText())){
                txtCalculadora.setText(cadena+".");
            }
        }
    }//GEN-LAST:event_bttDecimalActionPerformed

    private void bttPositivoNegativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttPositivoNegativoActionPerformed
        String cadena;
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText();
            if(cadena.length() <= 0){
                txtCalculadora.setText("+");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(cadena.length() == 1 && "+".equals(ultimo)){
                    txtCalculadora.setText("-");
                }else if(cadena.length() == 1 && "-".equals(ultimo)){
                    txtCalculadora.setText("+");
                }else if(cadena.length() > 1 && " ".equals(ultimo)){
                    txtCalculadora.setText(cadena + "+");
                }else if(cadena.length() > 1 && "+".equals(ultimo)){
                    txtCalculadora.setText(cadena.substring(0, cadena.length()-1) + "-");
                }else if(cadena.length() > 1 && "-".equals(ultimo)){
                    txtCalculadora.setText(cadena.substring(0, cadena.length()-1) + "+");
                }
            }
        }else{
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "+");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(cadena.length() == 1 && "+".equals(ultimo)){
                    txtCalculadora.setText(inicio + "-");
                }else if(cadena.length() == 1 && "-".equals(ultimo)){
                    txtCalculadora.setText(inicio + "+");
                }else if(cadena.length() > 1 && " ".equals(ultimo)){
                    txtCalculadora.setText(inicio + cadena + "+");
                }else if(cadena.length() > 1 && "+".equals(ultimo)){
                    txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-1) + "-");
                }else if(cadena.length() > 1 && "-".equals(ultimo)){
                    txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-1) + "+");
                }
            }
        }
    }//GEN-LAST:event_bttPositivoNegativoActionPerformed

    private void bttRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttRespuestaActionPerformed
        String respuesta = String.valueOf(memoria);
        if(decimalVacio(memoria)){
            respuesta = respuesta.substring(0, respuesta.length()-2);
        }
        String cadena, ultimo;
        if(haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + respuesta + " ");
            }else{
                ultimo = cadena.substring(cadena.length()-1);
                if(" ".equals(ultimo) && cadena.length() > 1){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + respuesta + " ");
                    }
                }
            }
        }
    }//GEN-LAST:event_bttRespuestaActionPerformed

    private void bttBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBorrarActionPerformed
        if(txtCalculadora.getText().length() > 0){
            String cadena = "";
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                cadena = txtCalculadora.getText();
                String ultimo = cadena.substring(cadena.length()-1);
                if(cadena.length() >= 4){
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if(" ".equals(ultimo) && ("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo))){
                        txtCalculadora.setText(cadena.substring(0, cadena.length()-3));
                    }else if(" ".equals(ultimo) || ")".equals(ultimo)){
                        txtCalculadora.setText(cadena.substring(0, cadena.length()-2));
                    }else{
                        txtCalculadora.setText(cadena.substring(0, cadena.length()-1));
                    }
                }else{
                    if(" ".equals(ultimo)){
                        txtCalculadora.setText(cadena.substring(0, cadena.length()-2));
                    }else{
                        txtCalculadora.setText(cadena.substring(0, cadena.length()-1));
                    }
                }
            }else{
                cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() > 0){
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(cadena.length() >= 4){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if(" ".equals(ultimo) && ("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo))){
                            txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-3));
                        }else if(" ".equals(ultimo) || ")".equals(ultimo)){
                            txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-2));
                        }else{
                            txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-1));
                        }
                    }else{
                        if(" ".equals(ultimo)){
                            txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-2));
                        }else{
                            txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-1));
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_bttBorrarActionPerformed

    private void bttLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttLimpiarActionPerformed
        String cadena = txtCalculadora.getText();
        cadena = cadena.substring(0, cadena.length()-ultimoSalto(cadena));
        txtCalculadora.setText(cadena);
    }//GEN-LAST:event_bttLimpiarActionPerformed

    private void bttSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttSumaActionPerformed
        String cadena;
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText();
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(cadena + " + ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(cadena + " + ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(!" ".equals(ultimo) && !"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(cadena + " + ");
                    }
                }
            }
        }else{
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(inicio + cadena + " + ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(inicio + cadena + " + ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if(" ".equals(ultimo)){
                        if(!"+".equals(penultimo) && !"-".equals(penultimo) && !"*".equals(penultimo) && !"/".equals(penultimo) && !"^".equals(penultimo) && !"(".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + " + ");
                        }
                    }else if(!"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(inicio + cadena + " + ");
                    }
                }
            }
        }
    }//GEN-LAST:event_bttSumaActionPerformed

    private void bttRestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttRestaActionPerformed
        String cadena;
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText();
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(cadena + " - ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(cadena + " - ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(!" ".equals(ultimo) && !"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(cadena + " - ");
                    }
                }
            }
        }else{
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(inicio + cadena + " - ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(inicio + cadena + " - ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if(" ".equals(ultimo)){
                        if(!"+".equals(penultimo) && !"-".equals(penultimo) && !"*".equals(penultimo) && !"/".equals(penultimo) && !"^".equals(penultimo) && !"(".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + " - ");
                        }
                    }else if(!"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(inicio + cadena + " - ");
                    }
                }
            }
        }
    }//GEN-LAST:event_bttRestaActionPerformed

    private void bttMultiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttMultiplicacionActionPerformed
        String cadena;
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText();
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(cadena + " * ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(cadena + " * ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(!" ".equals(ultimo) && !"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(cadena + " * ");
                    }
                }
            }
        }else{
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(inicio + cadena + " * ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(inicio + cadena + " * ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if(" ".equals(ultimo)){
                        if(!"+".equals(penultimo) && !"-".equals(penultimo) && !"*".equals(penultimo) && !"/".equals(penultimo) && !"^".equals(penultimo) && !"(".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + " * ");
                        }
                    }else if(!"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(inicio + cadena + " * ");
                    }
                }
            }
        }
    }//GEN-LAST:event_bttMultiplicacionActionPerformed

    private void bttDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttDivisionActionPerformed
        String cadena;
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText();
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(cadena + " / ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(cadena + " / ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(!" ".equals(ultimo) && !"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(cadena + " / ");
                    }
                }
            }
        }else{
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(inicio + cadena + " / ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(inicio + cadena + " / ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if(" ".equals(ultimo)){
                        if(!"+".equals(penultimo) && !"-".equals(penultimo) && !"*".equals(penultimo) && !"/".equals(penultimo) && !"^".equals(penultimo) && !"(".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + " / ");
                        }
                    }else if(!"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(inicio + cadena + " / ");
                    }
                }
            }
        }
    }//GEN-LAST:event_bttDivisionActionPerformed

    private void bttPotenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttPotenciaActionPerformed
        String cadena;
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText();
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(cadena + " ^ ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(cadena + " ^ ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(!" ".equals(ultimo) && !"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(cadena + " ^ ");
                    }
                }
            }
        }else{
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() > 0){
                if(cadena.length() == 1){
                    txtCalculadora.setText(inicio + cadena + " ^ ");
                }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                    txtCalculadora.setText(inicio + cadena + " ^ ");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                    if(" ".equals(ultimo)){
                        if(!"+".equals(penultimo) && !"-".equals(penultimo) && !"*".equals(penultimo) && !"/".equals(penultimo) && !"^".equals(penultimo) && !"(".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + " ^ ");
                        }
                    }else if(!"+".equals(ultimo) && !"-".equals(ultimo)){
                        txtCalculadora.setText(inicio + cadena + " ^ ");
                    }
                }
            }
        }
    }//GEN-LAST:event_bttPotenciaActionPerformed

    private void bttParentesisInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttParentesisInicioActionPerformed
        String cadena;
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText();
            if(cadena.length() <= 0){
                txtCalculadora.setText("( ");
            }else if(cadena.length() >= 2){
                String ultimo = cadena.substring(cadena.length()-1);
                String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                if(" ".equals(ultimo)){
                    if(!")".equals(penultimo)){
                        txtCalculadora.setText(cadena + "( ");
                    }
                }
            }
        }else{
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
            if(cadena.length() <= 0){
                txtCalculadora.setText(inicio + "( ");
            }else if(cadena.length() >= 2){
                String ultimo = cadena.substring(cadena.length()-1);
                String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                if(" ".equals(ultimo)){
                    if(!")".equals(penultimo)){
                        txtCalculadora.setText(inicio + cadena + "( ");
                    }
                }
            }
        }
    }//GEN-LAST:event_bttParentesisInicioActionPerformed

    private void bttParentesisFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttParentesisFinalActionPerformed
        String cadena = txtCalculadora.getText();
        if(hayParentesisInicial(cadena)){
            txtCalculadora.setText(cadena + " )");
        }
    }//GEN-LAST:event_bttParentesisFinalActionPerformed

    private void bttIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttIgualActionPerformed
        String cadena = "";
        if(!haySaltoDeLinea(txtCalculadora.getText())){
            cadena = txtCalculadora.getText();
        }else{
            cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
        }
        if(cadena.length() > 0){
            String posFijo = conversion(cadena);
            double res = resolucion(posFijo);
            memoria = res;
            String valor = "";
            if(decimalVacio(res)){
                valor = String.valueOf(res).substring(0, String.valueOf(res).length()-2);
            }else{
                valor = String.valueOf(res);
            }
            txtCalculadora.setText(cadena + "\n" + valor + "\n");
        }
    }//GEN-LAST:event_bttIgualActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed

    private void txtCalculadoraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalculadoraKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_1 || evt.getKeyCode() == KeyEvent.VK_NUMPAD1){
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                txtCalculadora.setText(txtCalculadora.getText()+"1");
            }else{
                String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "1");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo)){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "1");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "1");
                    }
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_2 || evt.getKeyCode() == KeyEvent.VK_NUMPAD2){
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                txtCalculadora.setText(txtCalculadora.getText()+"2");
            }else{
                String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "2");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo)){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "2");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "2");
                    }
                }
        }
        }else if(evt.getKeyCode() == KeyEvent.VK_3 || evt.getKeyCode() == KeyEvent.VK_NUMPAD3){
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                txtCalculadora.setText(txtCalculadora.getText()+"3");
            }else{
                String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "3");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo)){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "3");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "3");
                    }
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_4 || evt.getKeyCode() == KeyEvent.VK_NUMPAD4){
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                txtCalculadora.setText(txtCalculadora.getText()+"4");
            }else{
                String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "4");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo)){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "4");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "4");
                    }
                }
        }
        }else if(evt.getKeyCode() == KeyEvent.VK_5 || evt.getKeyCode() == KeyEvent.VK_NUMPAD5){
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                txtCalculadora.setText(txtCalculadora.getText()+"5");
            }else{
                String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "5");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo)){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "5");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "5");
                    }
                }
        }
        }else if(evt.getKeyCode() == KeyEvent.VK_6 || evt.getKeyCode() == KeyEvent.VK_NUMPAD6){
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                txtCalculadora.setText(txtCalculadora.getText()+"6");
            }else{
                String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "6");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo)){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "6");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "6");
                    }
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_7 || evt.getKeyCode() == KeyEvent.VK_NUMPAD7){
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                txtCalculadora.setText(txtCalculadora.getText()+"7");
            }else{
                String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "7");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo)){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "7");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "7");
                    }
                }
        }
        }else if(evt.getKeyCode() == KeyEvent.VK_8 || evt.getKeyCode() == KeyEvent.VK_NUMPAD8){
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                txtCalculadora.setText(txtCalculadora.getText()+"8");
            }else{
                String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "8");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo)){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "8");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "8");
                    }
                }
        }
        }else if(evt.getKeyCode() == KeyEvent.VK_9 || evt.getKeyCode() == KeyEvent.VK_NUMPAD9){
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                txtCalculadora.setText(txtCalculadora.getText()+"9");
            }else{
                String cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "9");
                }else{
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo)){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + "9");
                        }
                    }else{
                        txtCalculadora.setText(inicio + cadena + "9");
                    }
                }
        }
        }else if(evt.getKeyCode() == KeyEvent.VK_0 || evt.getKeyCode() == KeyEvent.VK_NUMPAD0){
            String cadena, ultimo, penultimo;
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                cadena = txtCalculadora.getText();
                if(cadena.length() <= 0){
                    txtCalculadora.setText("0");
                }else{
                    ultimo = cadena.substring(cadena.length()-1);
                    if(cadena.length() == 1){
                        if(!"0".equals(ultimo)){
                            txtCalculadora.setText(cadena + "0");
                        }
                    }
                    else{
                        if(" ".equals(ultimo)){
                            txtCalculadora.setText(cadena + "0");
                        }else if("0".equals(ultimo)){
                            penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                            if(!"+".equals(penultimo) || !"-".equals(penultimo) || !" ".equals(penultimo)){
                                txtCalculadora.setText(cadena + "0");
                            }
                        }else{
                            txtCalculadora.setText(cadena + "0");
                        }
                    }
                }
            }else{
                cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + "0");
                }else{
                    ultimo = cadena.substring(cadena.length()-1);
                    if(cadena.length() == 1){
                        if(!"0".equals(ultimo)){
                            txtCalculadora.setText(inicio + cadena + "0");
                        }
                    }
                    else{
                        penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if(" ".equals(ultimo) && ("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo))){
                            txtCalculadora.setText(inicio + cadena + "0");
                        }else if("0".equals(ultimo)){
                            if(!"+".equals(penultimo) || !"-".equals(penultimo) || !" ".equals(penultimo)){
                                txtCalculadora.setText(inicio + cadena + "0");
                            }
                        }else{
                            txtCalculadora.setText(inicio + cadena + "0");
                        }
                    }
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_PERIOD){
            String cadena = txtCalculadora.getText();
            if(cadena.length() <= 0){
                txtCalculadora.setText("0.");
            }else{
                String ultimo = cadena.substring(cadena.length()-1);
                if(!hayPunto(txtCalculadora.getText()) && (" ".equals(ultimo) || "+".equals(ultimo) || "-".equals(ultimo) || "\n".equals(ultimo))){
                    txtCalculadora.setText(cadena+"0.");
                }else if(!hayPunto(txtCalculadora.getText())){
                    txtCalculadora.setText(cadena+".");
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_PLUS){
            String cadena;
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                cadena = txtCalculadora.getText();
                if(cadena.length() > 0){
                    if(cadena.length() == 1){
                        txtCalculadora.setText(cadena + " + ");
                    }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                        txtCalculadora.setText(cadena + " + ");
                    }else{
                        String ultimo = cadena.substring(cadena.length()-1);
                        if(!" ".equals(ultimo) && !"+".equals(ultimo) && !"-".equals(ultimo)){
                            txtCalculadora.setText(cadena + " + ");
                        }
                    }
                }
            }else{
                cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() > 0){
                    if(cadena.length() == 1){
                        txtCalculadora.setText(inicio + cadena + " + ");
                    }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                        txtCalculadora.setText(inicio + cadena + " + ");
                    }else{
                        String ultimo = cadena.substring(cadena.length()-1);
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if(" ".equals(ultimo)){
                            if(!"+".equals(penultimo) && !"-".equals(penultimo) && !"*".equals(penultimo) && !"/".equals(penultimo) && !"^".equals(penultimo) && !"(".equals(penultimo)){
                                txtCalculadora.setText(inicio + cadena + " + ");
                            }
                        }else if(!"+".equals(ultimo) && !"-".equals(ultimo)){
                            txtCalculadora.setText(inicio + cadena + " + ");
                        }
                    }
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_MINUS){
            String cadena;
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                cadena = txtCalculadora.getText();
                if(cadena.length() > 0){
                    if(cadena.length() == 1){
                        txtCalculadora.setText(cadena + " - ");
                    }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                        txtCalculadora.setText(cadena + " - ");
                    }else{
                        String ultimo = cadena.substring(cadena.length()-1);
                        if(!" ".equals(ultimo) && !"+".equals(ultimo) && !"-".equals(ultimo)){
                            txtCalculadora.setText(cadena + " - ");
                        }
                    }
                }
            }else{
                cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() > 0){
                    if(cadena.length() == 1){
                        txtCalculadora.setText(inicio + cadena + " - ");
                    }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                        txtCalculadora.setText(inicio + cadena + " - ");
                    }else{
                        String ultimo = cadena.substring(cadena.length()-1);
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if(" ".equals(ultimo)){
                            if(!"+".equals(penultimo) && !"-".equals(penultimo) && !"*".equals(penultimo) && !"/".equals(penultimo) && !"^".equals(penultimo) && !"(".equals(penultimo)){
                                txtCalculadora.setText(inicio + cadena + " - ");
                            }
                        }else if(!"+".equals(ultimo) && !"-".equals(ultimo)){
                            txtCalculadora.setText(inicio + cadena + " - ");
                        }
                    }
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_ASTERISK){
            String cadena;
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                cadena = txtCalculadora.getText();
                if(cadena.length() > 0){
                    if(cadena.length() == 1){
                        txtCalculadora.setText(cadena + " * ");
                    }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                        txtCalculadora.setText(cadena + " * ");
                    }else{
                        String ultimo = cadena.substring(cadena.length()-1);
                        if(!" ".equals(ultimo) && !"+".equals(ultimo) && !"-".equals(ultimo)){
                            txtCalculadora.setText(cadena + " * ");
                        }
                    }
                }
            }else{
                cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() > 0){
                    if(cadena.length() == 1){
                        txtCalculadora.setText(inicio + cadena + " * ");
                    }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                        txtCalculadora.setText(inicio + cadena + " * ");
                    }else{
                        String ultimo = cadena.substring(cadena.length()-1);
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if(" ".equals(ultimo)){
                            if(!"+".equals(penultimo) && !"-".equals(penultimo) && !"*".equals(penultimo) && !"/".equals(penultimo) && !"^".equals(penultimo) && !"(".equals(penultimo)){
                                txtCalculadora.setText(inicio + cadena + " * ");
                            }
                        }else if(!"+".equals(ultimo) && !"-".equals(ultimo)){
                            txtCalculadora.setText(inicio + cadena + " * ");
                        }
                    }
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_SLASH){
            String cadena;
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                cadena = txtCalculadora.getText();
                if(cadena.length() > 0){
                    if(cadena.length() == 1){
                        txtCalculadora.setText(cadena + " / ");
                    }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                        txtCalculadora.setText(cadena + " / ");
                    }else{
                        String ultimo = cadena.substring(cadena.length()-1);
                        if(!" ".equals(ultimo) && !"+".equals(ultimo) && !"-".equals(ultimo)){
                            txtCalculadora.setText(cadena + " / ");
                        }
                    }
                }
            }else{
                cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() > 0){
                    if(cadena.length() == 1){
                        txtCalculadora.setText(inicio + cadena + " / ");
                    }else if(cadena.length() <= 3 && !"(".equals(cadena.substring(cadena.length()-2, cadena.length()-1))){
                        txtCalculadora.setText(inicio + cadena + " / ");
                    }else{
                        String ultimo = cadena.substring(cadena.length()-1);
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if(" ".equals(ultimo)){
                            if(!"+".equals(penultimo) && !"-".equals(penultimo) && !"*".equals(penultimo) && !"/".equals(penultimo) && !"^".equals(penultimo) && !"(".equals(penultimo)){
                                txtCalculadora.setText(inicio + cadena + " / ");
                            }
                        }else if(!"+".equals(ultimo) && !"-".equals(ultimo)){
                            txtCalculadora.setText(inicio + cadena + " / ");
                        }
                    }
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String cadena = "";
            if(!haySaltoDeLinea(txtCalculadora.getText())){
                cadena = txtCalculadora.getText();
            }else{
                cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length() - ultimoSalto(txtCalculadora.getText()));
            }
            if(cadena.length() > 0){
                String posFijo = conversion(cadena);
                double res = resolucion(posFijo);
                memoria = res;
                String valor = "";
                if(decimalVacio(res)){
                    valor = String.valueOf(res).substring(0, String.valueOf(res).length()-2);
                }else{
                    valor = String.valueOf(res);
                }
                txtCalculadora.setText(cadena + "\n" + valor + "\n");
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE){
            if(txtCalculadora.getText().length() > 0){
                String cadena = "";
                if(!haySaltoDeLinea(txtCalculadora.getText())){
                    cadena = txtCalculadora.getText();
                    String ultimo = cadena.substring(cadena.length()-1);
                    if(cadena.length() >= 4){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if(" ".equals(ultimo) && ("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo))){
                            txtCalculadora.setText(cadena.substring(0, cadena.length()-3));
                        }else if(" ".equals(ultimo) || ")".equals(ultimo)){
                            txtCalculadora.setText(cadena.substring(0, cadena.length()-2));
                        }else{
                            txtCalculadora.setText(cadena.substring(0, cadena.length()-1));
                        }
                    }else{
                        if(" ".equals(ultimo)){
                            txtCalculadora.setText(cadena.substring(0, cadena.length()-2));
                        }else{
                            txtCalculadora.setText(cadena.substring(0, cadena.length()-1));
                        }
                    }
                }else{
                    cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                    String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                    if(cadena.length() > 0){
                        String ultimo = cadena.substring(cadena.length()-1);
                        if(cadena.length() >= 4){
                            String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                            if(" ".equals(ultimo) && ("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo))){
                                txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-3));
                            }else if(" ".equals(ultimo) || ")".equals(ultimo)){
                                txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-2));
                            }else{
                                txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-1));
                            }
                        }else{
                            if(" ".equals(ultimo)){
                                txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-2));
                            }else{
                                txtCalculadora.setText(inicio + cadena.substring(0, cadena.length()-1));
                            }
                        }
                    }
                }
            }
        }else if(evt.getKeyCode() == KeyEvent.VK_DELETE && haySaltoDeLinea(txtCalculadora.getText()) && ultimoSalto(txtCalculadora.getText()) == 0){
            txtCalculadora.setText("");
            memoria = 0.0;
        }else if(evt.getKeyCode() == KeyEvent.VK_DELETE){
            String cadena = txtCalculadora.getText();
            cadena = cadena.substring(0, cadena.length()-ultimoSalto(cadena));
            txtCalculadora.setText(cadena);
        }else if(evt.getKeyCode() == KeyEvent.VK_INSERT){
            String respuesta = String.valueOf(memoria);
            if(decimalVacio(memoria)){
                respuesta = respuesta.substring(0, respuesta.length()-2);
            }
            String cadena, ultimo;
            if(haySaltoDeLinea(txtCalculadora.getText())){
                cadena = txtCalculadora.getText().substring(txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                String inicio = txtCalculadora.getText().substring(0,txtCalculadora.getText().length()-ultimoSalto(txtCalculadora.getText()));
                if(cadena.length() <= 0){
                    txtCalculadora.setText(inicio + respuesta + " ");
                }else{
                    ultimo = cadena.substring(cadena.length()-1);
                    if(" ".equals(ultimo) && cadena.length() > 1){
                        String penultimo = cadena.substring(cadena.length()-2, cadena.length()-1);
                        if("+".equals(penultimo) || "-".equals(penultimo) || "*".equals(penultimo) || "/".equals(penultimo) || "^".equals(penultimo)){
                            txtCalculadora.setText(inicio + cadena + respuesta + " ");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_txtCalculadoraKeyPressed
    
    public static String conversion(String cadena){
        String polinomio = "";
        Conversion conv = new Conversion(cadena);
        polinomio = conv.aPosFija();
        return polinomio;
    }
    
    public static double resolucion(String cadena){
        double respuesta = 0.0;
        Evaluacion eval = new Evaluacion(cadena);
        respuesta = eval.resolucion();
        return respuesta;
    }
    
    public static boolean hayPunto(String cadena){
        boolean respuesta = false, espacio = false;
        String car = "";
        for(int i = cadena.length()-1; i >= 0 && !espacio && !respuesta; i--){
            car = cadena.substring(i, i+1);
            if(" ".equals(car)){
                espacio = true;
            }else if(".".equals(car)){
                respuesta = true;
            }
        }
        return respuesta;
    }
    
    public static boolean hayParentesisInicial(String cadena){
        boolean respuesta = false;
        int cont = 0;
        for(int i = cadena.length()-1; i >= 0 && !respuesta; i--){
            if(")".equals(cadena.substring(i,i+1))){
                cont++;
            }else if("(".equals(cadena.substring(i,i+1)) && cont == 0){
                respuesta = true;
            }else if("(".equals(cadena.substring(i,i+1)) && cont != 0){
                cont--;
            }
        }
        return respuesta;
    }
    
    public static boolean haySaltoDeLinea(String cadena){
        boolean respuesta = false;
        for(int i = cadena.length()-1; i >= 0 && !respuesta; i--){
            String car = cadena.substring(i, i+1);
            if("\n".equals(car)){
                respuesta = true;
            }
        }
        return respuesta;
    }
    
    public static int ultimoSalto(String cadena){
        int ubicacion = 0;
        boolean encontrado = false;
        String ultimo = "";
        for(int i = cadena.length()-1; i >=0 && !encontrado; i--){
            ultimo = cadena.substring(i, i+1);
            if(!"\n".equals(ultimo)){
                ubicacion++;
            }else{
                encontrado = true;
            }
        }
        return ubicacion;
    }
    
    public static boolean decimalVacio(double valor){
        boolean respuesta = false;
        String numero = String.valueOf(valor);
        String penultimo = numero.substring(numero.length()-2, numero.length()-1);
        if(".".equals(penultimo)){
            String ultimo = numero.substring(numero.length()-1);
            if("0".equals(ultimo)){
                respuesta = true;
            }
        }
        return respuesta;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceCalculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btt0;
    private javax.swing.JButton btt1;
    private javax.swing.JButton btt2;
    private javax.swing.JButton btt3;
    private javax.swing.JButton btt4;
    private javax.swing.JButton btt5;
    private javax.swing.JButton btt6;
    private javax.swing.JButton btt7;
    private javax.swing.JButton btt8;
    private javax.swing.JButton btt9;
    private javax.swing.JButton bttBorrar;
    private javax.swing.JButton bttDecimal;
    private javax.swing.JButton bttDivision;
    private javax.swing.JButton bttIgual;
    private javax.swing.JButton bttLimpiar;
    private javax.swing.JButton bttLimpiarTodo;
    private javax.swing.JButton bttMultiplicacion;
    private javax.swing.JButton bttParentesisFinal;
    private javax.swing.JButton bttParentesisInicio;
    private javax.swing.JButton bttPositivoNegativo;
    private javax.swing.JButton bttPotencia;
    private javax.swing.JButton bttRespuesta;
    private javax.swing.JButton bttResta;
    private javax.swing.JButton bttSuma;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panDatos;
    private javax.swing.JTextArea txtCalculadora;
    // End of variables declaration//GEN-END:variables
}
